ID,correct_bool,problem_num,ai_prompt,send_problem_data,send_student_data,ai_response,ai_keyword,ai_idea,non_passed_standard,idea_error_object,idea_error_reason,idea_error_detail,idea_error_advice,final_choice,count,idea
1413,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`
            Even if a specific process is not directly mentioned in a sentence, if words or concepts corresponding to the results of that process are included, it should be judged that the process is implied. What is important is not the explicit description of the process, but the presence or absence of the results.

            
            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Give breif, implict but clear and easy to understand hint.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 모든 수를 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""잘못된대상""], ""idea_error_detail"": [""누적합을 출력해야 하는데, 학생의 아이디어는 개별 숫자들을 출력하는 것으로 보입니다. 최종적으로 필요한 결과물(누적합)이 아닌 다른 대상을 출력하고 있습니다.""], ""idea_error_advice"": [""무엇을 최종적으로 보여주어야 하는지 다시 한번 확인해 보세요. 개별적인 숫자들인가요, 아니면 그 숫자들을 통해 얻은 특별한 값인가요?""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""잘못된대상""]","[""누적합을 출력해야 하는데, 학생의 아이디어는 개별 숫자들을 출력하는 것으로 보입니다. 최종적으로 필요한 결과물(누적합)이 아닌 다른 대상을 출력하고 있습니다.""]","[""무엇을 최종적으로 보여주어야 하는지 다시 한번 확인해 보세요. 개별적인 숫자들인가요, 아니면 그 숫자들을 통해 얻은 특별한 값인가요?""]",\N,2,1부터 10까지의 모든 수를 출력한다.
1412,1,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`
            Even if a specific process is not directly mentioned in a sentence, if words or concepts corresponding to the results of that process are included, it should be judged that the process is implied. What is important is not the explicit description of the process, but the presence or absence of the results.

            
            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Give breif, implict but clear and easy to understand hint.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 모든 수의 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,0,1부터 10까지의 모든 수의 합을 출력한다.
1240,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`
            Even if a specific process is not directly mentioned in a sentence, if words or concepts corresponding to the results of that process are included, it should be judged that the process is implied. What is important is not the explicit description of the process, but the presence or absence of the results.

            
            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Give breif, indirect but clear and easy to understand hint.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 모든 수를 더한 값을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""불명확""], ""idea_error_detail"": [""1부터 10까지의 범위를 언급했지만, 이 범위 내에서 어떤 방식으로 반복적인 연산이 이루어지는지에 대한 구체적인 언급이 부족합니다. 단순히 '모든 수를 더한 값'이라고만 하여 반복의 과정이 명확하게 드러나지 않습니다.""], ""idea_error_advice"": [""1부터 10까지의 숫자를 다루는 과정에서, 각 숫자에 대해 어떤 작업을 수행하는지 좀 더 명확하게 설명해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""불명확""]","[""1부터 10까지의 범위를 언급했지만, 이 범위 내에서 어떤 방식으로 반복적인 연산이 이루어지는지에 대한 구체적인 언급이 부족합니다. 단순히 '모든 수를 더한 값'이라고만 하여 반복의 과정이 명확하게 드러나지 않습니다.""]","[""1부터 10까지의 숫자를 다루는 과정에서, 각 숫자에 대해 어떤 작업을 수행하는지 좀 더 명확하게 설명해 보세요.""]",\N,1,1부터 10까지 모든 수를 더한 값을 출력한다.
1145,1,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`
            Even if a specific process is not directly mentioned in a sentence, if words or concepts corresponding to the results of that process are included, it should be judged that the process is implied. What is important is not the explicit description of the process, but the presence or absence of the results.

            
            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Give breif, indirect but clear and easy to understand hint.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적해 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 누적해 합을 출력한다.
1120,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`
            Even if a specific process is not directly mentioned in a sentence, if words or concepts corresponding to the results of that process are included, it should be judged that the process is implied. What is important is not the explicit description of the process, but the presence or absence of the results.

            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Give breif, indirect but clear and easy to understand hint.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""  1부터 10까지 모두 더한 값을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""불명확""], ""idea_error_detail"": [""1부터 10까지의 숫자를 순차적으로 처리하는 '반복' 과정이 명확하게 언급되지 않았습니다. '1부터 10까지 모두 더한 값'이라는 표현은 결과만을 나타내며, 그 결과를 얻기 위한 구체적인 반복 행위가 불명확합니다.""], ""idea_error_advice"": [""문제를 해결하기 위한 과정에서 '반복'이 어떻게 이루어지는지, 즉 어떤 방식으로 1부터 10까지의 숫자를 하나씩 처리할 것인지에 대한 설명을 추가해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""불명확""]","[""1부터 10까지의 숫자를 순차적으로 처리하는 '반복' 과정이 명확하게 언급되지 않았습니다. '1부터 10까지 모두 더한 값'이라는 표현은 결과만을 나타내며, 그 결과를 얻기 위한 구체적인 반복 행위가 불명확합니다.""]","[""문제를 해결하기 위한 과정에서 '반복'이 어떻게 이루어지는지, 즉 어떤 방식으로 1부터 10까지의 숫자를 하나씩 처리할 것인지에 대한 설명을 추가해 보세요.""]",\N,0,1부터 10까지 모두 더한 값을 출력한다.
1071,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하는 수를 더한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": ""누적""}","""누적""",\N,[],[],[],[],[],\N,2,1부터 10까지 1씩 증가하는 수를 더한 값을 출력한다.
1070,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하는 수를 누적하여 합산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""누적된 합산 결과를 어떻게 처리할지에 대한 내용이 누락되었습니다.""], ""idea_error_advice"": [""계산된 최종 결과는 어떻게 사용자에게 보여줄 수 있을까요? 그 방법에 대해 생각해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""누적된 합산 결과를 어떻게 처리할지에 대한 내용이 누락되었습니다.""]","[""계산된 최종 결과는 어떻게 사용자에게 보여줄 수 있을까요? 그 방법에 대해 생각해 보세요.""]",\N,2,1부터 10까지 1씩 증가하는 수를 누적하여 합산한다.
1034,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Give breif, indirect but clear and easy to understand hint.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1~10까지 반복하여 누적한 값을 구한뒤 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1~10까지 반복하여 누적한 값을 구한뒤 출력한다.
1033,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터10까지 반복하여 누적합을 구한뒤 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터10까지 반복하여 누적합을 구한뒤 출력한다.
1032,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 모든 수를 더한 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 모든 수를 더한 결과를 출력한다.
941,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하며 누적한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 1씩 증가하며 누적한 값을 출력한다.
909,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한 값을 변수에 담아 출력하기""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 더한 값을 변수에 담아 출력하기
908,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적값을 출력""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 누적값을 출력
907,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적값을 변수에 할당하여 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 누적값을 변수에 할당하여 출력한다.
904,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한값을 변수에 할당하여 출력한다""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""부족""], ""idea_error_detail"": [""학생의 아이디어는 '1부터 10까지 더한값'이라고만 언급하여 최종 결과값(55)을 직접적으로 제시하는 것처럼 보입니다. 이는 1부터 10까지의 숫자를 순차적으로 '반복'하며 '누적'하는 과정에 대한 설명이 부족합니다. 문제의 핵심은 '누적합을 구하는 과정'을 설명하는 것이므로, 단순히 '더한값'이라고만 하면 반복적인 계산 과정이 생략된 것으로 판단됩니다.""], ""idea_error_advice"": [""문제에서 요구하는 '누적합을 구하는 과정'을 명확히 설명하려면, 단순히 최종 결과값을 언급하는 것을 넘어 어떤 방식으로 숫자들이 더해지는지, 즉 어떤 '과정'을 거쳐 합이 이루어지는지를 구체적으로 제시해야 합니다. 예를 들어, 1부터 시작하여 10까지의 각 숫자를 순서대로 더해나가는 '반복적인' 행위를 어떻게 표현할 수 있을지 고민해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""부족""]","[""학생의 아이디어는 '1부터 10까지 더한값'이라고만 언급하여 최종 결과값(55)을 직접적으로 제시하는 것처럼 보입니다. 이는 1부터 10까지의 숫자를 순차적으로 '반복'하며 '누적'하는 과정에 대한 설명이 부족합니다. 문제의 핵심은 '누적합을 구하는 과정'을 설명하는 것이므로, 단순히 '더한값'이라고만 하면 반복적인 계산 과정이 생략된 것으로 판단됩니다.""]","[""문제에서 요구하는 '누적합을 구하는 과정'을 명확히 설명하려면, 단순히 최종 결과값을 언급하는 것을 넘어 어떤 방식으로 숫자들이 더해지는지, 즉 어떤 '과정'을 거쳐 합이 이루어지는지를 구체적으로 제시해야 합니다. 예를 들어, 1부터 시작하여 10까지의 각 숫자를 순서대로 더해나가는 '반복적인' 행위를 어떻게 표현할 수 있을지 고민해 보세요.""]",\N,0,1부터 10까지 더한값을 변수에 할당하여 출력한다
903,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적한 값을 출력한다""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""부족""], ""idea_error_detail"": [""1부터 10까지의 범위를 언급했지만, 해당 범위 내에서 '반복'하여 '누적'하는 과정이 명확하게 드러나지 않습니다. 단순히 '누적한 값'이라고만 언급되어 반복의 행위가 불분명합니다.""], ""idea_error_advice"": [""문제 해결을 위해 어떤 과정을 '반복'해야 하는지, 그리고 그 반복 과정에서 무엇을 해야 하는지 좀 더 구체적으로 설명해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""부족""]","[""1부터 10까지의 범위를 언급했지만, 해당 범위 내에서 '반복'하여 '누적'하는 과정이 명확하게 드러나지 않습니다. 단순히 '누적한 값'이라고만 언급되어 반복의 행위가 불분명합니다.""]","[""문제 해결을 위해 어떤 과정을 '반복'해야 하는지, 그리고 그 반복 과정에서 무엇을 해야 하는지 좀 더 구체적으로 설명해 보세요.""]",\N,2,1부터 10까지 누적한 값을 출력한다
902,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한 값을 출력한다""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""불명확""], ""idea_error_detail"": [""학생의 아이디어는 '더한 값'이라고만 언급하여, 각 숫자를 순차적으로 '누적'하여 더하는 과정이 명확하게 드러나지 않습니다. 단순히 최종 합계를 의미하는 것으로 해석될 수 있습니다.""], ""idea_error_advice"": [""단순히 '더한 값'이라고 표현하기보다는, 숫자들이 어떻게 모여서 최종 합계가 되는지 그 과정을 좀 더 자세히 설명해 보면 좋을 것 같습니다.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""불명확""]","[""학생의 아이디어는 '더한 값'이라고만 언급하여, 각 숫자를 순차적으로 '누적'하여 더하는 과정이 명확하게 드러나지 않습니다. 단순히 최종 합계를 의미하는 것으로 해석될 수 있습니다.""]","[""단순히 '더한 값'이라고 표현하기보다는, 숫자들이 어떻게 모여서 최종 합계가 되는지 그 과정을 좀 더 자세히 설명해 보면 좋을 것 같습니다.""]",\N,2,1부터 10까지 더한 값을 출력한다
884,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한 값을 변수에 할당하여 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""부족""], ""idea_error_detail"": [""학생의 아이디어는 '더한 값'을 언급하지만, '누적합'이라는 개념이 명확하게 드러나지 않습니다. '누적'은 반복적인 덧셈을 통해 점진적으로 합을 쌓아가는 과정을 의미하는데, 학생의 아이디어는 최종 합을 한 번에 구하는 것처럼 해석될 여지가 있어 누적의 의미가 부족합니다.""], ""idea_error_advice"": [""단순히 '더한 값'이라고 표현하기보다는, 합이 점진적으로 쌓여가는 과정을 나타내는 단어를 사용해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""부족""]","[""학생의 아이디어는 '더한 값'을 언급하지만, '누적합'이라는 개념이 명확하게 드러나지 않습니다. '누적'은 반복적인 덧셈을 통해 점진적으로 합을 쌓아가는 과정을 의미하는데, 학생의 아이디어는 최종 합을 한 번에 구하는 것처럼 해석될 여지가 있어 누적의 의미가 부족합니다.""]","[""단순히 '더한 값'이라고 표현하기보다는, 합이 점진적으로 쌓여가는 과정을 나타내는 단어를 사용해 보세요.""]",\N,2,1부터 10까지 더한 값을 변수에 할당하여 출력한다.
883,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한 값을 변수에 담아 출력""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 더한 값을 변수에 담아 출력
881,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 정수형 숫자들 중 1부터 시작해서 10까지의 누적합을 구하여 출력하세요.\r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 합을 모두 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""부족""], ""idea_error_detail"": [""학생의 아이디어는 1부터 10까지의 합을 출력한다고 명시했지만, '합을 구하는' 과정, 즉 누적합을 수행하는 연산에 대한 언급이 부족합니다. 단순히 '합을 출력한다'는 것은 결과만 말하는 것이며, 어떻게 합을 구하는지에 대한 구체적인 아이디어가 누락되어 있습니다.""], ""idea_error_advice"": [""아이디어는 문제 해결의 과정을 담아야 합니다. 단순히 결과를 언급하는 것을 넘어, 그 결과를 얻기 위한 핵심적인 연산 과정이 명확하게 드러나야 합니다. '합을 구한다'는 것이 어떤 방식으로 이루어지는지 조금 더 구체적으로 생각해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""부족""]","[""학생의 아이디어는 1부터 10까지의 합을 출력한다고 명시했지만, '합을 구하는' 과정, 즉 누적합을 수행하는 연산에 대한 언급이 부족합니다. 단순히 '합을 출력한다'는 것은 결과만 말하는 것이며, 어떻게 합을 구하는지에 대한 구체적인 아이디어가 누락되어 있습니다.""]","[""아이디어는 문제 해결의 과정을 담아야 합니다. 단순히 결과를 언급하는 것을 넘어, 그 결과를 얻기 위한 핵심적인 연산 과정이 명확하게 드러나야 합니다. '합을 구한다'는 것이 어떤 방식으로 이루어지는지 조금 더 구체적으로 생각해 보세요.""]",\N,2,1부터 10까지의 합을 모두 출력한다.
783,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 누적합을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""누적합을 '구하는' 또는 '계산하는' 과정에 대한 언급이 누락되었습니다. 단순히 누적합을 출력한다고만 되어 있어, 누적합을 어떻게 얻을지에 대한 아이디어가 부족합니다.""], ""idea_error_advice"": [""아이디어에서 어떤 값을 얻기 위해 필요한 '과정'이나 '행위'가 명확하게 제시되었는지 다시 한번 확인해 보세요. 단순히 결과만 언급하는 것이 아니라, 그 결과를 얻기 위한 구체적인 단계를 포함해야 합니다.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""누락""]","[""누적합을 '구하는' 또는 '계산하는' 과정에 대한 언급이 누락되었습니다. 단순히 누적합을 출력한다고만 되어 있어, 누적합을 어떻게 얻을지에 대한 아이디어가 부족합니다.""]","[""아이디어에서 어떤 값을 얻기 위해 필요한 '과정'이나 '행위'가 명확하게 제시되었는지 다시 한번 확인해 보세요. 단순히 결과만 언급하는 것이 아니라, 그 결과를 얻기 위한 구체적인 단계를 포함해야 합니다.""]",\N,0,1부터 10까지 반복하여 누적합을 출력한다.
782,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 합을 계산하여 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": ""누적""}","""누적""",\N,[],[],[],[],[],\N,1,1부터 10까지의 합을 계산하여 출력한다.
781,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""10까지의 합을 계산하여 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": ""누적""}","""누적""",\N,[],[],[],[],[],\N,2,10까지의 합을 계산하여 출력한다.
768,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 모든 수를 누적 합한 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 모든 수를 누적 합한 결과를 출력한다.
737,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 누적한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,1,1부터 10까지 반복하여 누적한 값을 출력한다.
736,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터10까 반복하여 누적한 값을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""부족"", ""불명확""], ""idea_error_detail"": [""누적합을 구하는 구체적인 연산 과정이 명시되지 않았습니다."", ""누적합을 출력하는 것은 명시되었으나, '1부터 10까지의 누적합'이라는 결과물이 명확하게 언급되지 않았습니다.""], ""idea_error_advice"": [""누적합을 구하기 위한 구체적인 연산 방식(예: 각 숫자를 더하는 과정)을 더 명확하게 설명해 보세요."", ""출력되는 내용이 정확히 무엇인지(예: 1부터 10까지의 누적합) 명시하면 아이디어가 더 분명해질 것입니다.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""누적"", ""출력""]","[""부족"", ""불명확""]","[""누적합을 구하는 구체적인 연산 과정이 명시되지 않았습니다."", ""누적합을 출력하는 것은 명시되었으나, '1부터 10까지의 누적합'이라는 결과물이 명확하게 언급되지 않았습니다.""]","[""누적합을 구하기 위한 구체적인 연산 방식(예: 각 숫자를 더하는 과정)을 더 명확하게 설명해 보세요."", ""출력되는 내용이 정확히 무엇인지(예: 1부터 10까지의 누적합) 명시하면 아이디어가 더 분명해질 것입니다.""]",\N,2,1부터10까 반복하여 누적한 값을 출력한다.
735,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""반복 범위는 1부터 10까지로 설정하고 누적된 값을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""부족""], ""idea_error_detail"": [""누적된 값을 출력한다고는 했지만, '누적'이 어떤 방식으로 이루어지는지에 대한 구체적인 연산(예: 덧셈)에 대한 언급이 부족합니다.""], ""idea_error_advice"": [""누적된 값을 얻기 위해 어떤 연산이 필요한지, 그리고 그 연산이 반복 과정에서 어떻게 적용되어야 하는지 좀 더 구체적으로 생각해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""부족""]","[""누적된 값을 출력한다고는 했지만, '누적'이 어떤 방식으로 이루어지는지에 대한 구체적인 연산(예: 덧셈)에 대한 언급이 부족합니다.""]","[""누적된 값을 얻기 위해 어떤 연산이 필요한지, 그리고 그 연산이 반복 과정에서 어떻게 적용되어야 하는지 좀 더 구체적으로 생각해 보세요.""]",\N,2,반복 범위는 1부터 10까지로 설정하고 누적된 값을 출력한다.
734,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터10까지 반복하여 누적한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터10까지 반복하여 누적한 값을 출력한다.
723,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 모든 수를 누적하여 더한 값을 출력하세요""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 모든 수를 누적하여 더한 값을 출력하세요
720,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 수들의 합을 계산하여 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""학생의 아이디어는 '합을 계산'한다고 언급했지만, '누적합'이라는 개념이나 '누적'적으로 더해가는 과정에 대한 설명이 부족합니다. 단순히 최종 합을 구하는 것과 누적합을 구하는 과정은 다르게 해석될 수 있습니다.""], ""idea_error_advice"": [""단순히 최종 결과를 얻는 것 외에, 중간 과정에서 값이 어떻게 쌓여가는지, 즉 '누적'되는 과정에 대해 더 자세히 설명해 볼 수 있을까요?""], ""missing_keyword"": ""누적""}","""누적""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""누락""]","[""학생의 아이디어는 '합을 계산'한다고 언급했지만, '누적합'이라는 개념이나 '누적'적으로 더해가는 과정에 대한 설명이 부족합니다. 단순히 최종 합을 구하는 것과 누적합을 구하는 과정은 다르게 해석될 수 있습니다.""]","[""단순히 최종 결과를 얻는 것 외에, 중간 과정에서 값이 어떻게 쌓여가는지, 즉 '누적'되는 과정에 대해 더 자세히 설명해 볼 수 있을까요?""]",\N,2,1부터 10까지의 수들의 합을 계산하여 출력한다.
719,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 모든 수들의 합을 계산하여 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지의 모든 수들의 합을 계산하여 출력한다.
692,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 값들을 모두 더하여 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지의 값들을 모두 더하여 출력한다.
658,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하는 값을 누적하여 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 1씩 증가하는 값을 누적하여 출력한다.
657,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하는 값을 누적한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""누적합을 구하는 과정은 언급되었으나, 최종적으로 이 누적합을 사용자에게 보여주는 '출력' 과정이 아이디어에 포함되어 있지 않습니다.""], ""idea_error_advice"": [""문제 해결의 마지막 단계는 보통 결과를 사용자에게 전달하는 것입니다. 계산된 값을 어떻게 보여줄지에 대한 내용이 포함되어야 합니다.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""]","[""출력""]","[""누락""]","[""누적합을 구하는 과정은 언급되었으나, 최종적으로 이 누적합을 사용자에게 보여주는 '출력' 과정이 아이디어에 포함되어 있지 않습니다.""]","[""문제 해결의 마지막 단계는 보통 결과를 사용자에게 전달하는 것입니다. 계산된 값을 어떻게 보여줄지에 대한 내용이 포함되어야 합니다.""]",\N,2,1부터 10까지 1씩 증가하는 값을 누적한다.
656,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 반복한 값을 누적한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 반복한 값을 누적한 값을 출력한다.
655,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 반복한 값을 누적합니다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from\b1\bto\b10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""누적합을 출력하는 내용이 누락되었습니다.""], ""idea_error_advice"": [""문제 해결을 위한 아이디어에 중요한 단계가 빠져있습니다. 최종 결과를 사용자에게 어떻게 보여줄지에 대한 부분을 다시 생각해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from\b1\bto\b10.""]","[""출력""]","[""누락""]","[""누적합을 출력하는 내용이 누락되었습니다.""]","[""문제 해결을 위한 아이디어에 중요한 단계가 빠져있습니다. 최종 결과를 사용자에게 어떻게 보여줄지에 대한 부분을 다시 생각해 보세요.""]",\N,2,1부터 10까지 반복하여 반복한 값을 누적합니다.
654,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""변수 `a`를 선언하고, `a`에 1부터 10까지 1씩 증가하는 값을 누적하여 계산한 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,"변수 `a`를 선언하고, `a`에 1부터 10까지 1씩 증가하는 값을 누적하여 계산한 결과를 출력한다."
653,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""변수 `a`를 선언하고, `a`에 1부터 10까지의 값을 대입한 합을 계산한 후 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": ""누적""}","""누적""",\N,[],[],[],[],[],\N,2,"변수 `a`를 선언하고, `a`에 1부터 10까지의 값을 대입한 합을 계산한 후 출력한다."
652,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""변수 `a`를 선언하고 `a`에 1부터 10까지의 값을 대입한 합을 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""계산된 누적합을 최종적으로 보여주는 과정에 대한 언급이 없습니다.""], ""idea_error_advice"": [""계산된 결과가 사용자에게 어떻게 전달되어야 하는지 고려해 보세요.""], ""missing_keyword"": ""출력, 누적""}","""출력, 누적""",\N,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""계산된 누적합을 최종적으로 보여주는 과정에 대한 언급이 없습니다.""]","[""계산된 결과가 사용자에게 어떻게 전달되어야 하는지 고려해 보세요.""]",\N,2,변수 `a`를 선언하고 `a`에 1부터 10까지의 값을 대입한 합을 계산한다.
650,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 수를 누적하여 모두 더한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,1,1부터 10까지의 수를 누적하여 모두 더한 값을 출력한다.
649,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 정수 합계를 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""부족"", ""부족"", ""누락""], ""idea_error_detail"": [""학생의 아이디어는 '1부터 10까지'라는 범위만 언급하고 있으며, 이 범위 내에서 '반복'이 명시적으로 이루어진다는 내용이 부족합니다. '1부터 10까지'는 반복의 범위를 나타낼 뿐, 반복 행위 자체를 의미하지 않습니다."", ""학생의 아이디어는 '정수 합계'를 계산한다고만 언급하여 누적합을 수행한다는 의미는 포함하고 있으나, '누적'이라는 키워드나 그에 상응하는 명확한 표현이 부족합니다. 단순히 합계를 계산하는 것과 누적하여 합계를 구하는 것의 차이가 명확히 드러나지 않습니다."", ""학생의 아이디어에는 계산된 합계를 '출력'한다는 내용이 전혀 언급되어 있지 않습니다.""], ""idea_error_advice"": [""아이디어에 '1부터 10까지'의 범위 내에서 어떤 동작이 '반복'되어야 하는지 명확히 설명하는 부분이 필요합니다. 단순히 범위만 제시하는 것을 넘어, 그 범위 안에서 일어나는 반복적인 행위를 구체적으로 언급해 보세요."", ""아이디어에서 '합계'를 구하는 방식이 단순히 한 번의 계산인지, 아니면 여러 값을 '누적'하여 더해가는 과정인지 명확히 표현하는 것이 중요합니다. '누적'의 의미를 더 잘 나타낼 수 있는 단어나 문장을 사용해 보세요."", ""문제 해결의 마지막 단계로, 계산된 결과를 사용자에게 어떻게 보여줄 것인지에 대한 내용이 아이디어에 포함되어야 합니다. 결과를 '출력'하는 과정을 명시적으로 언급해 보세요.""], ""missing_keyword"": ""누적, 출력""}","""누적, 출력""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""부족"", ""부족"", ""누락""]","[""학생의 아이디어는 '1부터 10까지'라는 범위만 언급하고 있으며, 이 범위 내에서 '반복'이 명시적으로 이루어진다는 내용이 부족합니다. '1부터 10까지'는 반복의 범위를 나타낼 뿐, 반복 행위 자체를 의미하지 않습니다."", ""학생의 아이디어는 '정수 합계'를 계산한다고만 언급하여 누적합을 수행한다는 의미는 포함하고 있으나, '누적'이라는 키워드나 그에 상응하는 명확한 표현이 부족합니다. 단순히 합계를 계산하는 것과 누적하여 합계를 구하는 것의 차이가 명확히 드러나지 않습니다."", ""학생의 아이디어에는 계산된 합계를 '출력'한다는 내용이 전혀 언급되어 있지 않습니다.""]","[""아이디어에 '1부터 10까지'의 범위 내에서 어떤 동작이 '반복'되어야 하는지 명확히 설명하는 부분이 필요합니다. 단순히 범위만 제시하는 것을 넘어, 그 범위 안에서 일어나는 반복적인 행위를 구체적으로 언급해 보세요."", ""아이디어에서 '합계'를 구하는 방식이 단순히 한 번의 계산인지, 아니면 여러 값을 '누적'하여 더해가는 과정인지 명확히 표현하는 것이 중요합니다. '누적'의 의미를 더 잘 나타낼 수 있는 단어나 문장을 사용해 보세요."", ""문제 해결의 마지막 단계로, 계산된 결과를 사용자에게 어떻게 보여줄 것인지에 대한 내용이 아이디어에 포함되어야 합니다. 결과를 '출력'하는 과정을 명시적으로 언급해 보세요.""]",\N,2,1부터 10까지의 정수 합계를 계산한다.
648,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 숫자를 더한 후, 합산된 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,0,"1부터 10까지 반복하여 숫자를 더한 후, 합산된 결과를 출력한다."
647,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 각 수를 누적하여 더한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 각 수를 누적하여 더한 값을 출력한다.
646,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 누적한 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 누적한 합을 출력한다.
645,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 각 수를 누적한 값을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,1,1부터 10까지 반복하여 각 수를 누적한 값을 출력한다.
644,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 모든 수를 합산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from\r\n1\r\nto\r\n10."", ""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""], ""idea_error_object"": [""반복"", ""출력""], ""idea_error_reason"": [""부족"", ""누락""], ""idea_error_detail"": [""1부터 10까지의 범위를 언급했지만, 해당 범위 내에서 '반복'적으로 어떤 작업을 수행해야 하는지에 대한 구체적인 내용이 부족합니다."", ""계산된 누적합을 '출력'해야 한다는 내용이 아이디어에 명시적으로 포함되어 있지 않습니다.""], ""idea_error_advice"": [""아이디어에 1부터 10까지의 범위 내에서 어떤 동작을 '반복'해야 하는지, 그리고 그 '반복'을 통해 얻은 결과를 어떻게 처리할 것인지에 대한 구체적인 계획을 추가해 보세요."", ""문제 해결의 마지막 단계인 결과 '출력'에 대한 부분을 명확히 언급하여 아이디어를 완성해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies repeating/increasing from\r\n1\r\nto\r\n10."", ""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""]","[""반복"", ""출력""]","[""부족"", ""누락""]","[""1부터 10까지의 범위를 언급했지만, 해당 범위 내에서 '반복'적으로 어떤 작업을 수행해야 하는지에 대한 구체적인 내용이 부족합니다."", ""계산된 누적합을 '출력'해야 한다는 내용이 아이디어에 명시적으로 포함되어 있지 않습니다.""]","[""아이디어에 1부터 10까지의 범위 내에서 어떤 동작을 '반복'해야 하는지, 그리고 그 '반복'을 통해 얻은 결과를 어떻게 처리할 것인지에 대한 구체적인 계획을 추가해 보세요."", ""문제 해결의 마지막 단계인 결과 '출력'에 대한 부분을 명확히 언급하여 아이디어를 완성해 보세요.""]",\N,2,1부터 10까지의 모든 수를 합산한다.
643,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 정수를 더한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""부족"", ""누락""], ""idea_error_detail"": [""학생의 아이디어는 '1부터 10까지의 정수를 더한다'고만 언급하여, '누적합'이라는 개념이 명확하게 표현되지 않았습니다. 단순히 더하는 행위는 누적합을 포함할 수 있지만, 문제에서 요구하는 '누적'의 의미가 충분히 전달되지 않았습니다."", ""학생의 아이디어는 1부터 10까지의 정수를 더하는 과정만 언급하고, 최종적으로 그 결과를 '출력'해야 한다는 내용이 완전히 누락되었습니다.""], ""idea_error_advice"": [""단순히 값을 더하는 것을 넘어, 그 값들이 어떻게 합쳐져서 최종 결과가 되는지 그 과정을 설명하는 데 집중해 보세요. '합'이라는 개념이 어떻게 점진적으로 만들어지는지 생각해 볼 수 있습니다."", ""계산된 결과를 사용자에게 어떻게 보여줄지에 대한 부분이 빠져 있습니다. 문제 해결의 마지막 단계에서 결과를 어떻게 전달할지 고민해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""]","[""누적"", ""출력""]","[""부족"", ""누락""]","[""학생의 아이디어는 '1부터 10까지의 정수를 더한다'고만 언급하여, '누적합'이라는 개념이 명확하게 표현되지 않았습니다. 단순히 더하는 행위는 누적합을 포함할 수 있지만, 문제에서 요구하는 '누적'의 의미가 충분히 전달되지 않았습니다."", ""학생의 아이디어는 1부터 10까지의 정수를 더하는 과정만 언급하고, 최종적으로 그 결과를 '출력'해야 한다는 내용이 완전히 누락되었습니다.""]","[""단순히 값을 더하는 것을 넘어, 그 값들이 어떻게 합쳐져서 최종 결과가 되는지 그 과정을 설명하는 데 집중해 보세요. '합'이라는 개념이 어떻게 점진적으로 만들어지는지 생각해 볼 수 있습니다."", ""계산된 결과를 사용자에게 어떻게 보여줄지에 대한 부분이 빠져 있습니다. 문제 해결의 마지막 단계에서 결과를 어떻게 전달할지 고민해 보세요.""]",\N,2,1부터 10까지의 정수를 더한다.
637,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""부족"", ""누락""], ""idea_error_detail"": [""단순히 '더한다'고만 언급되어 누적합을 구하는 과정이 명확하게 드러나지 않습니다."", ""계산된 누적합을 출력해야 한다는 내용이 누락되었습니다.""], ""idea_error_advice"": [""단순히 더하는 것을 넘어, 여러 값을 순차적으로 더해나가는 과정을 어떻게 표현할지 생각해 보세요."", ""계산된 결과를 사용자에게 보여주는 방법에 대한 내용이 포함되어 있는지 점검해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""누적"", ""출력""]","[""부족"", ""누락""]","[""단순히 '더한다'고만 언급되어 누적합을 구하는 과정이 명확하게 드러나지 않습니다."", ""계산된 누적합을 출력해야 한다는 내용이 누락되었습니다.""]","[""단순히 더하는 것을 넘어, 여러 값을 순차적으로 더해나가는 과정을 어떻게 표현할지 생각해 보세요."", ""계산된 결과를 사용자에게 보여주는 방법에 대한 내용이 포함되어 있는지 점검해 보세요.""]",\N,2,1부터 10까지 더한다.
634,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 커지는 수를 누적 합하여 그 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 커지는 수를 누적 합하여 그 결과를 출력한다.
633,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 누적 합""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""계산된 누적합을 어떻게 보여줄지에 대한 출력 과정이 누락되었습니다.""], ""idea_error_advice"": [""계산된 결과는 사용자에게 어떻게 전달되어야 할까요? 결과를 보여주는 방법에 대한 고려가 필요합니다.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""계산된 누적합을 어떻게 보여줄지에 대한 출력 과정이 누락되었습니다.""]","[""계산된 결과는 사용자에게 어떻게 전달되어야 할까요? 결과를 보여주는 방법에 대한 고려가 필요합니다.""]",\N,0,1부터 10까지의 누적 합
632,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 누적합을 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""3.Mentions/implies outputting the cumulative sum from\b1\bto\b10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""계산된 누적합을 '출력'해야 한다는 내용이 누락되었습니다.""], ""idea_error_advice"": [""계산된 결과는 어떻게 사용자에게 보여줄 수 있을지 고민해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""3.Mentions/implies outputting the cumulative sum from\b1\bto\b10.""]","[""출력""]","[""누락""]","[""계산된 누적합을 '출력'해야 한다는 내용이 누락되었습니다.""]","[""계산된 결과는 어떻게 사용자에게 보여줄 수 있을지 고민해 보세요.""]",\N,1,1부터 10까지의 누적합을 계산한다.
631,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""누락""], ""idea_error_detail"": [""1부터 10까지 반복하는 과정에서 누적합을 구하는 내용이 누락되었습니다."", ""구해진 누적합을 출력하는 내용이 누락되었습니다.""], ""idea_error_advice"": [""반복문 안에서 어떤 연산을 수행해야 하는지, 그리고 그 결과를 어떻게 처리해야 하는지 다시 한번 생각해 보세요."", ""계산된 최종 결과를 사용자에게 어떻게 보여줄지 고려해 보세요.""], ""missing_keyword"": ""누적, 출력""}","""누적, 출력""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""누적"", ""출력""]","[""누락"", ""누락""]","[""1부터 10까지 반복하는 과정에서 누적합을 구하는 내용이 누락되었습니다."", ""구해진 누적합을 출력하는 내용이 누락되었습니다.""]","[""반복문 안에서 어떤 연산을 수행해야 하는지, 그리고 그 결과를 어떻게 처리해야 하는지 다시 한번 생각해 보세요."", ""계산된 최종 결과를 사용자에게 어떻게 보여줄지 고려해 보세요.""]",\N,2,1부터 10까지 반복한다.
630,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하며 반복하여 누적한 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 1씩 증가하며 반복하여 누적한 결과를 출력한다.
629,1,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복하여 1씩 증가한 값을 누적한 결과를 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,2,1부터 10까지 반복하여 1씩 증가한 값을 누적한 결과를 출력한다.
628,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 1씩 증가하며 누적한 결과를 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""불명확""], ""idea_error_detail"": [""학생의 아이디어는 '1부터 10까지 1씩 증가하며'라고 언급하여 반복의 범위를 제시했지만, '반복문'과 같은 명시적인 반복의 수단이나 개념을 직접적으로 언급하지 않아 반복의 구현 방식이 불명확합니다. 이는 문제 해결에 필요한 최소한의 정보가 부족하다고 판단됩니다.""], ""idea_error_advice"": [""아이디어에 문제 해결을 위한 핵심적인 동작 방식이나 구조를 좀 더 명확하게 표현하는 방법을 고민해 보세요. 어떤 방식으로 특정 작업을 여러 번 수행할 것인지 구체적으로 언급하는 것이 중요합니다.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""불명확""]","[""학생의 아이디어는 '1부터 10까지 1씩 증가하며'라고 언급하여 반복의 범위를 제시했지만, '반복문'과 같은 명시적인 반복의 수단이나 개념을 직접적으로 언급하지 않아 반복의 구현 방식이 불명확합니다. 이는 문제 해결에 필요한 최소한의 정보가 부족하다고 판단됩니다.""]","[""아이디어에 문제 해결을 위한 핵심적인 동작 방식이나 구조를 좀 더 명확하게 표현하는 방법을 고민해 보세요. 어떤 방식으로 특정 작업을 여러 번 수행할 것인지 구체적으로 언급하는 것이 중요합니다.""]",\N,0,1부터 10까지 1씩 증가하며 누적한 결과를 출력한다.
627,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 누적 합계를 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""누적 합계를 계산하는 내용은 있지만, 그 결과를 '출력'해야 한다는 내용이 누락되었습니다.""], ""idea_error_advice"": [""계산된 결과가 사용자에게 어떻게 전달되어야 하는지 아이디어에 포함되어 있는지 확인해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""]","[""출력""]","[""누락""]","[""누적 합계를 계산하는 내용은 있지만, 그 결과를 '출력'해야 한다는 내용이 누락되었습니다.""]","[""계산된 결과가 사용자에게 어떻게 전달되어야 하는지 아이디어에 포함되어 있는지 확인해 보세요.""]",\N,0,1부터 10까지의 누적 합계를 계산한다.
626,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적 합""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""학생의 아이디어에는 계산된 누적합을 '출력'해야 한다는 내용이 누락되어 있습니다. 문제 해결의 최종 단계인 결과 제시가 빠져 있습니다.""], ""idea_error_advice"": [""문제 해결 과정에서 얻은 최종 결과를 어떻게 사용자에게 보여줄 것인지에 대한 계획도 중요합니다. 계산된 값을 단순히 가지고 있는 것을 넘어, 그 값을 외부에 나타내는 방법에 대해 생각해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""학생의 아이디어에는 계산된 누적합을 '출력'해야 한다는 내용이 누락되어 있습니다. 문제 해결의 최종 단계인 결과 제시가 빠져 있습니다.""]","[""문제 해결 과정에서 얻은 최종 결과를 어떻게 사용자에게 보여줄 것인지에 대한 계획도 중요합니다. 계산된 값을 단순히 가지고 있는 것을 넘어, 그 값을 외부에 나타내는 방법에 대해 생각해 보세요.""]",\N,1,1부터 10까지 누적 합
625,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 정수 합계.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""누락""], ""idea_error_detail"": [""학생의 아이디어는 '합계'라는 단어를 사용했지만, 이 합계가 '누적'되는 과정, 즉 반복적으로 더해지는 과정에 대한 설명이 누락되었습니다."", ""학생의 아이디어는 계산된 '합계'를 '출력'해야 한다는 내용이 누락되었습니다.""], ""idea_error_advice"": [""아이디어에 단순히 '합계'를 구한다는 것을 넘어, 숫자들이 어떻게 점진적으로 더해져 최종 합계에 도달하는지에 대한 과정이 명확히 드러나야 합니다."", ""아이디어에 최종적으로 계산된 결과를 사용자에게 어떻게 보여줄 것인지에 대한 내용이 추가되어야 합니다.""], ""missing_keyword"": ""누적, 출력""}","""누적, 출력""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from\r\n1\r\nto\r\n10.""]","[""누적"", ""출력""]","[""누락"", ""누락""]","[""학생의 아이디어는 '합계'라는 단어를 사용했지만, 이 합계가 '누적'되는 과정, 즉 반복적으로 더해지는 과정에 대한 설명이 누락되었습니다."", ""학생의 아이디어는 계산된 '합계'를 '출력'해야 한다는 내용이 누락되었습니다.""]","[""아이디어에 단순히 '합계'를 구한다는 것을 넘어, 숫자들이 어떻게 점진적으로 더해져 최종 합계에 도달하는지에 대한 과정이 명확히 드러나야 합니다."", ""아이디어에 최종적으로 계산된 결과를 사용자에게 어떻게 보여줄 것인지에 대한 내용이 추가되어야 합니다.""]",\N,2,1부터 10까지의 정수 합계.
615,0,30013,"
        ## Role
        Your Role is an AI grader that checks students' ideas for solving programming problems.
        You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
        Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
        Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
        Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
        Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
        Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

        ## Evaluation Process
        1. **Keyword Matching**: Check if the every required keywords are included
        2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
        3. **Output Results**: Provide feedback in the specified format

        ---

        ## Step 1: Keyword matching
        Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
        If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

        ### Preprocessing Rules
        - Ignore ending particles (-다, -한다, -함, -기, etc.)
        - Operator normalization (space after +, -, *, /, %)
        - Space/special character normalization

        ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
        **A. Direct matching**: When the keyword matches exactly
        **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
        Examples of synonyms, words with the same meaning, or expressions used in the same context
        - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
        - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
        - Repetition: 반복,~부터~까지,for문,while문,루프
        - Condition: 조건,만약,if문,분기,판단
        - Calculation: 계산,연산,구하기,산출
        - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

        **C. Operators**: Operators with the same meaning as keywords
        +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
        **D. Excluded expressions**:
        Only explicit mentions are allowed, and output must be explicitly mentioned.

        Output example
        1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
        2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
        ...
        Keyword check final result - (cumulative score)

        ---


        ## Step 2: Idea solvability
        A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
        **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
        Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
        If the number of conditions does not match the number of points, the problem is considered unsolvable.
        Output the entire process.
        Output example
        1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
        2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
        ...
        Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

        1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

        ---


        ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
        If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

        Error cause target (10 items) = Target that causes the error

        1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

        Error cause reason (10 items) = Description of why the target that caused the error became an error

        1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

        0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
        Error Cause Classification Process
        1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause target is (error cause target).
        2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
        Output = The error cause is (error cause target) due to (error cause reason).
        3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
        Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
        4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
        Output = (Feedback)


        Then, output the error message.
        ### Error message format
        ‘Error cause target = (error cause target)’
        ‘Error cause reason = (error cause reason)’
        ‘Error cause specific explanation = (specific explanation)’

        ###Error message example
        ‘Error cause target = variable cleanup’
        ‘Error cause reason = omission’
        ‘Error cause specific explanation = Variable declaration is missing.’

        ---


        ## Step 4: Output the final result
        Output the information obtained from the keyword check and idea answer criteria check performed so far.
        - correct_bool: Answer correctness (True/False)
        - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
        - idea_error_object: Error cause target (empty string if correct)
        - idea_error_reason: Error cause reason (empty string if correct)
        - idea_error_detail: Specific error description (empty string if correct)
        - idea_error_advice: broad error description(Feedback) (empty string if correct) 
        - missing_keyword: Missing keyword (empty string if correct)

        ## Evaluation Checklist
        1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

        ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 모든 수를 더한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from\n1\nto\n10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""부족"", ""누락""], ""idea_error_detail"": [""학생의 아이디어는 '모든 수를 더한다'고만 언급하여 단순 합계를 의미할 수 있습니다. '누적합'이라는 개념, 즉 이전 값에 현재 값을 계속 더해나가는 과정에 대한 명확한 언급이 부족합니다."", ""학생의 아이디어에는 계산된 결과를 '출력'해야 한다는 내용이 전혀 포함되어 있지 않습니다. 문제 해결의 마지막 단계인 결과 제시가 누락되었습니다.""], ""idea_error_advice"": [""단순히 합계를 구하는 것을 넘어, 각 단계에서 값이 어떻게 '쌓여가는지'를 표현하는 방법을 고민해 보세요."", ""문제를 해결한 후, 그 '결과'를 사용자에게 어떻게 전달할지에 대한 계획이 필요합니다. 최종 결과물을 보여주는 방법에 대해 생각해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from\n1\nto\n10.""]","[""누적"", ""출력""]","[""부족"", ""누락""]","[""학생의 아이디어는 '모든 수를 더한다'고만 언급하여 단순 합계를 의미할 수 있습니다. '누적합'이라는 개념, 즉 이전 값에 현재 값을 계속 더해나가는 과정에 대한 명확한 언급이 부족합니다."", ""학생의 아이디어에는 계산된 결과를 '출력'해야 한다는 내용이 전혀 포함되어 있지 않습니다. 문제 해결의 마지막 단계인 결과 제시가 누락되었습니다.""]","[""단순히 합계를 구하는 것을 넘어, 각 단계에서 값이 어떻게 '쌓여가는지'를 표현하는 방법을 고민해 보세요."", ""문제를 해결한 후, 그 '결과'를 사용자에게 어떻게 전달할지에 대한 계획이 필요합니다. 최종 결과물을 보여주는 방법에 대해 생각해 보세요.""]",\N,2,1부터 10까지 모든 수를 더한다.
614,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 합을 더한다.""}","{""correct_bool"": false, ""non_passed_standard"": [], ""idea_error_object"": [""기타""], ""idea_error_reason"": [""시스템 오류""], ""idea_error_detail"": [""AI 응답 오류가 발생했습니다.""], ""idea_error_advice"": [""잠시 후 다시 시도해주세요.""], ""missing_keyword"": """"}","""""",\N,[],"[""기타""]","[""시스템 오류""]","[""AI 응답 오류가 발생했습니다.""]","[""잠시 후 다시 시도해주세요.""]",\N,1,1부터 10까지의 합을 더한다.
604,0,30013,"
            ## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1에서 100까지 계속 커지면서 값을 모두 곱한다. 결과를 보여준다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""사칙연산"", ""출력""], ""idea_error_reason"": [""잘못된범위"", ""잘못된내용"", ""잘못된대상""], ""idea_error_detail"": [""반복 범위가 1부터 100까지로 설정되어 있어 문제에서 요구하는 1부터 10까지의 범위와 다릅니다."", ""누적합이 아닌 곱셈 연산을 수행한다고 언급하여 문제의 요구사항인 누적합과 다릅니다."", ""누적합을 출력해야 하지만, 단순히 '결과'를 보여준다고만 하여 어떤 결과인지 불명확하며, 문제에서 요구하는 누적합을 명시적으로 출력하는 내용이 부족합니다.""], ""idea_error_advice"": [""반복문의 범위를 문제에서 제시된 정확한 숫자로 설정했는지 다시 확인해 보세요."", ""문제에서 요구하는 연산이 덧셈인지 곱셈인지 정확히 파악하고, 그에 맞는 연산을 언급했는지 확인해 보세요."", ""어떤 값을 출력해야 하는지 명확하게 언급했는지 다시 한번 확인해 보세요.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""사칙연산"", ""출력""]","[""잘못된범위"", ""잘못된내용"", ""잘못된대상""]","[""반복 범위가 1부터 100까지로 설정되어 있어 문제에서 요구하는 1부터 10까지의 범위와 다릅니다."", ""누적합이 아닌 곱셈 연산을 수행한다고 언급하여 문제의 요구사항인 누적합과 다릅니다."", ""누적합을 출력해야 하지만, 단순히 '결과'를 보여준다고만 하여 어떤 결과인지 불명확하며, 문제에서 요구하는 누적합을 명시적으로 출력하는 내용이 부족합니다.""]","[""반복문의 범위를 문제에서 제시된 정확한 숫자로 설정했는지 다시 확인해 보세요."", ""문제에서 요구하는 연산이 덧셈인지 곱셈인지 정확히 파악하고, 그에 맞는 연산을 언급했는지 확인해 보세요."", ""어떤 값을 출력해야 하는지 명확하게 언급했는지 다시 한번 확인해 보세요.""]",\N,1,1에서 100까지 계속 커지면서 값을 모두 곱한다. 결과를 보여준다.
602,0,30013,"
            ## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""모든 수를 더한 결과를 보여준다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""불명확"", ""불명확""], ""idea_error_detail"": [""반복할 범위(1부터 10까지)에 대한 언급이 누락되었습니다."", ""누적합을 구하는 과정에 대한 설명이 불명확합니다."", ""누적합을 출력한다는 내용이 불명확합니다.""], ""idea_error_advice"": [""어떤 범위의 수를 다룰 것인지, 그리고 그 수들을 어떻게 처리할 것인지 구체적으로 명시해야 합니다. 또한, 최종 결과를 어떻게 사용자에게 전달할 것인지도 고려해야 합니다.""], ""missing_keyword"": ""1, 10, 반복""}","""1, 10, 반복""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""누락"", ""불명확"", ""불명확""]","[""반복할 범위(1부터 10까지)에 대한 언급이 누락되었습니다."", ""누적합을 구하는 과정에 대한 설명이 불명확합니다."", ""누적합을 출력한다는 내용이 불명확합니다.""]","[""어떤 범위의 수를 다룰 것인지, 그리고 그 수들을 어떻게 처리할 것인지 구체적으로 명시해야 합니다. 또한, 최종 결과를 어떻게 사용자에게 전달할 것인지도 고려해야 합니다.""]",\N,1,모든 수를 더한 결과를 보여준다.
601,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Analyzing example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            
            Analyzing example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
            Output = (Feedback)

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 합을 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""출력""], ""idea_error_reason"": [""누락"", ""누락""], ""idea_error_detail"": [""학생의 아이디어는 1부터 10까지의 합을 '계산한다'고만 언급하여, 문제에서 요구하는 '반복문'을 사용하여 합을 구하는 과정이 명확하게 드러나지 않습니다. 단순히 계산한다는 표현만으로는 반복의 개념이 포함되었다고 보기 어렵습니다."", ""학생의 아이디어는 계산된 합을 '출력'해야 한다는 내용을 포함하고 있지 않습니다. 문제의 요구사항 중 하나는 최종 누적합을 출력하는 것입니다.""], ""idea_error_advice"": [""문제를 해결하기 위해 어떤 과정을 '반복'해야 하는지, 그리고 그 반복을 통해 무엇을 얻을 수 있는지 구체적으로 생각해 보세요. 특히, '반복문'이라는 키워드가 왜 중요한지 다시 한번 고민해 볼 필요가 있습니다."", ""계산된 결과는 어떻게 사용자에게 보여줄 수 있을까요? 문제에서 요구하는 최종 결과물을 어떻게 전달할지에 대한 내용이 포함되어야 합니다.""], ""missing_keyword"": ""반복, 출력""}","""반복, 출력""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""출력""]","[""누락"", ""누락""]","[""학생의 아이디어는 1부터 10까지의 합을 '계산한다'고만 언급하여, 문제에서 요구하는 '반복문'을 사용하여 합을 구하는 과정이 명확하게 드러나지 않습니다. 단순히 계산한다는 표현만으로는 반복의 개념이 포함되었다고 보기 어렵습니다."", ""학생의 아이디어는 계산된 합을 '출력'해야 한다는 내용을 포함하고 있지 않습니다. 문제의 요구사항 중 하나는 최종 누적합을 출력하는 것입니다.""]","[""문제를 해결하기 위해 어떤 과정을 '반복'해야 하는지, 그리고 그 반복을 통해 무엇을 얻을 수 있는지 구체적으로 생각해 보세요. 특히, '반복문'이라는 키워드가 왜 중요한지 다시 한번 고민해 볼 필요가 있습니다."", ""계산된 결과는 어떻게 사용자에게 보여줄 수 있을까요? 문제에서 요구하는 최종 결과물을 어떻게 전달할지에 대한 내용이 포함되어야 합니다.""]",\N,1,1부터 10까지의 합을 계산한다.
600,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 100까지 곱한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""사칙연산"", ""출력""], ""idea_error_reason"": [""잘못된범위"", ""잘못된내용"", ""누락""], ""idea_error_detail"": [""반복 범위가 1부터 100까지로 잘못 설정되었고, 반복에 대한 명시적인 언급이 부족합니다."", ""누적 합계가 아닌 곱셈 연산을 언급하여 문제의 요구사항과 다릅니다."", ""최종 결과를 출력하는 과정이 누락되었습니다.""], ""idea_error_advice"": [""문제에서 요구하는 정확한 범위와 반복의 목적을 다시 한번 확인해 보세요."", ""문제에서 요구하는 연산의 종류(합계, 곱셈 등)를 명확히 파악하고 아이디어에 반영해야 합니다."", ""문제 해결의 마지막 단계인 결과 제시 방법을 고려해야 합니다.""], ""missing_keyword"": ""10, 반복, 누적, 출력""}","""10, 반복, 누적, 출력""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""사칙연산"", ""출력""]","[""잘못된범위"", ""잘못된내용"", ""누락""]","[""반복 범위가 1부터 100까지로 잘못 설정되었고, 반복에 대한 명시적인 언급이 부족합니다."", ""누적 합계가 아닌 곱셈 연산을 언급하여 문제의 요구사항과 다릅니다."", ""최종 결과를 출력하는 과정이 누락되었습니다.""]","[""문제에서 요구하는 정확한 범위와 반복의 목적을 다시 한번 확인해 보세요."", ""문제에서 요구하는 연산의 종류(합계, 곱셈 등)를 명확히 파악하고 아이디어에 반영해야 합니다."", ""문제 해결의 마지막 단계인 결과 제시 방법을 고려해야 합니다.""]",\N,2,1부터 100까지 곱한다.
599,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 모든 합을 더한 값을 계산한다""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""출력""], ""idea_error_reason"": [""누락"", ""누락""], ""idea_error_detail"": [""학생의 아이디어는 1부터 10까지의 범위를 언급하지만, 이 범위 내에서 '반복'적으로 어떤 작업을 수행한다는 내용이 명시적으로 포함되어 있지 않습니다. 단순히 '모든 합을 더한 값을 계산한다'는 것은 반복적인 과정을 통해 합을 구한다는 의미를 명확히 전달하지 못합니다."", ""학생의 아이디어는 계산된 누적합을 '출력'해야 한다는 내용을 명시적으로 언급하지 않았습니다. 문제 해결의 마지막 단계인 결과 제시가 누락되었습니다.""], ""idea_error_advice"": [""문제를 해결하기 위해 어떤 과정을 '반복'해야 하는지, 그리고 그 반복 과정에서 무엇을 해야 하는지 좀 더 구체적으로 생각해 보세요."", ""계산된 결과를 사용자에게 어떻게 보여줄 것인지에 대한 내용이 빠져 있습니다. 문제의 요구사항을 다시 확인하고, 최종 결과를 어떻게 제시할지 고민해 보세요.""], ""missing_keyword"": ""반복, 출력""}","""반복, 출력""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""출력""]","[""누락"", ""누락""]","[""학생의 아이디어는 1부터 10까지의 범위를 언급하지만, 이 범위 내에서 '반복'적으로 어떤 작업을 수행한다는 내용이 명시적으로 포함되어 있지 않습니다. 단순히 '모든 합을 더한 값을 계산한다'는 것은 반복적인 과정을 통해 합을 구한다는 의미를 명확히 전달하지 못합니다."", ""학생의 아이디어는 계산된 누적합을 '출력'해야 한다는 내용을 명시적으로 언급하지 않았습니다. 문제 해결의 마지막 단계인 결과 제시가 누락되었습니다.""]","[""문제를 해결하기 위해 어떤 과정을 '반복'해야 하는지, 그리고 그 반복 과정에서 무엇을 해야 하는지 좀 더 구체적으로 생각해 보세요."", ""계산된 결과를 사용자에게 어떻게 보여줄 것인지에 대한 내용이 빠져 있습니다. 문제의 요구사항을 다시 확인하고, 최종 결과를 어떻게 제시할지 고민해 보세요.""]",\N,4,1부터 10까지 모든 합을 더한 값을 계산한다
598,0,30013,"
            ## Role
            Your Role is an AI grader that checks students' ideas for solving programming problems.
            You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
            Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
            Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
            Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
            Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
            Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

            ## Evaluation Process
            1. **Keyword Matching**: Check if the every required keywords are included
            2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
            3. **Output Results**: Provide feedback in the specified format

            ---

            ## Step 1: Keyword matching
            Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
            If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.

            ### Preprocessing Rules
            - Ignore ending particles (-다, -한다, -함, -기, etc.)
            - Operator normalization (space after +, -, *, /, %)
            - Space/special character normalization

            ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
            **A. Direct matching**: When the keyword matches exactly
            **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
            Examples of synonyms, words with the same meaning, or expressions used in the same context
            - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
            - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
            - Repetition: 반복,~부터~까지,for문,while문,루프
            - Condition: 조건,만약,if문,분기,판단
            - Calculation: 계산,연산,구하기,산출
            - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

            **C. Operators**: Operators with the same meaning as keywords
            +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
            **D. Excluded expressions**:
            Only explicit mentions are allowed, and output must be explicitly mentioned.

            Output example
            1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
            2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
            ...
            Keyword check final result - (cumulative score)

            ---


            ## Step 2: Idea solvability
            A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
            **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
            Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
            If the number of conditions does not match the number of points, the problem is considered unsolvable.
            Output the entire process.
            Output example
            1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
            2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
            ...
            Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

            1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

            ---


            ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
            If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

            Error cause target (10 items) = Target that causes the error

            1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

            Error cause reason (10 items) = Description of why the target that caused the error became an error

            1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

            0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
            Error Cause Classification Process
            1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause target is (error cause target).
            2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
            Output = The error cause is (error cause target) due to (error cause reason).
            3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
            Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
            4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
            Output = (Feedback)


            Then, output the error message.
            ### Error message format
            ‘Error cause target = (error cause target)’
            ‘Error cause reason = (error cause reason)’
            ‘Error cause specific explanation = (specific explanation)’

            ###Error message example
            ‘Error cause target = variable cleanup’
            ‘Error cause reason = omission’
            ‘Error cause specific explanation = Variable declaration is missing.’

            ---


            ## Step 4: Output the final result
            Output the information obtained from the keyword check and idea answer criteria check performed so far.
            - correct_bool: Answer correctness (True/False)
            - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
            - idea_error_object: Error cause target (empty string if correct)
            - idea_error_reason: Error cause reason (empty string if correct)
            - idea_error_detail: Specific error description (empty string if correct)
            - idea_error_advice: broad error description(Feedback) (empty string if correct) 
            - missing_keyword: Missing keyword (empty string if correct)

            ## Evaluation Checklist
            1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

            ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 합을 출력한다. ""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""학생의 아이디어에는 1부터 10까지의 범위를 언급하고 있지만, 이 범위 내에서 '반복'을 통해 작업을 수행한다는 내용이 명시적으로 포함되어 있지 않습니다. 단순히 '합'을 구한다고만 되어 있어 반복문의 사용이 불분명합니다.""], ""idea_error_advice"": [""문제에서 요구하는 핵심적인 해결 방식을 명확히 언급하는 것이 중요합니다. 단순히 결과만 제시하기보다는, 그 결과를 얻기 위한 과정(예: 어떤 방식으로 반복할 것인지)을 구체적으로 설명해 보세요.""], ""missing_keyword"": ""반복""}","""반복""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""누락""]","[""학생의 아이디어에는 1부터 10까지의 범위를 언급하고 있지만, 이 범위 내에서 '반복'을 통해 작업을 수행한다는 내용이 명시적으로 포함되어 있지 않습니다. 단순히 '합'을 구한다고만 되어 있어 반복문의 사용이 불분명합니다.""]","[""문제에서 요구하는 핵심적인 해결 방식을 명확히 언급하는 것이 중요합니다. 단순히 결과만 제시하기보다는, 그 결과를 얻기 위한 과정(예: 어떤 방식으로 반복할 것인지)을 구체적으로 설명해 보세요.""]",\N,3,1부터 10까지의 합을 출력한다.
597,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 11까지의 모든 수의 합을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10.""], ""idea_error_object"": [""반복""], ""idea_error_reason"": [""잘못된범위""], ""idea_error_detail"": [""1부터 10까지의 범위가 아닌 1부터 11까지의 범위로 언급되어 있습니다.""], ""idea_error_advice"": [""문제에서 요구하는 정확한 범위 내에서 반복이 이루어져야 합니다. 제시된 숫자를 다시 확인해 보세요.""], ""missing_keyword"": ""10""}","""10""",\N,"[""Mentions/implies repeating/increasing from 1 to 10.""]","[""반복""]","[""잘못된범위""]","[""1부터 10까지의 범위가 아닌 1부터 11까지의 범위로 언급되어 있습니다.""]","[""문제에서 요구하는 정확한 범위 내에서 반복이 이루어져야 합니다. 제시된 숫자를 다시 확인해 보세요.""]",\N,0,1부터 11까지의 모든 수의 합을 출력한다.
596,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 모든 수를 더한 결과를 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""계산된 누적합을 출력한다는 내용이 누락되었습니다.""], ""idea_error_advice"": [""계산된 결과를 사용자에게 보여주는 방법에 대해 생각해 보세요.""], ""missing_keyword"": ""출력""}","""출력""",\N,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""계산된 누적합을 출력한다는 내용이 누락되었습니다.""]","[""계산된 결과를 사용자에게 보여주는 방법에 대해 생각해 보세요.""]",\N,1,1부터 10까지의 모든 수를 더한 결과를 계산한다.
595,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 모든 수를 더한 결과를 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,4,1부터 10까지의 모든 수를 더한 결과를 출력한다.
594,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 100까지 숫자를 출력하세요""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,4,1부터 100까지 숫자를 출력하세요
593,1,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복해서 수를 더한 결과를 출력하세요""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",\N,[],[],[],[],[],\N,4,1부터 10까지 반복해서 수를 더한 결과를 출력하세요
592,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복해 수를 더한 결과를 출력하세요""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""불명확""], ""idea_error_detail"": [""학생의 아이디어는 '수를 더한 결과'라고만 언급하여, 단순히 한 번 더하는 것인지 아니면 반복적으로 누적하여 더하는 것인지 불명확합니다. 문제에서 요구하는 '누적합'의 개념이 명확히 드러나지 않습니다.""], ""idea_error_advice"": [""제시된 아이디어에서 '수를 더한 결과'라는 표현이 어떤 의미로 사용되었는지 다시 한번 생각해보세요. 특히, 반복적인 계산 과정에서 합이 어떻게 변화하고 저장되어야 하는지 구체적으로 설명하는 것이 중요합니다.""], ""missing_keyword"": """"}","""""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""불명확""]","[""학생의 아이디어는 '수를 더한 결과'라고만 언급하여, 단순히 한 번 더하는 것인지 아니면 반복적으로 누적하여 더하는 것인지 불명확합니다. 문제에서 요구하는 '누적합'의 개념이 명확히 드러나지 않습니다.""]","[""제시된 아이디어에서 '수를 더한 결과'라는 표현이 어떤 의미로 사용되었는지 다시 한번 생각해보세요. 특히, 반복적인 계산 과정에서 합이 어떻게 변화하고 저장되어야 하는지 구체적으로 설명하는 것이 중요합니다.""]",\N,4,1부터 10까지 반복해 수를 더한 결과를 출력하세요
591,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 반복해 수를 뺀 결과를 출력하세요""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""잘못된내용""], ""idea_error_detail"": [""누적합을 구하는 대신 수를 빼는 연산을 언급하여 문제의 핵심 요구사항인 '누적합'을 충족하지 못했습니다.""], ""idea_error_advice"": [""문제에서 요구하는 연산이 무엇인지 다시 한번 확인해 보세요. '누적합'이라는 단어의 의미를 정확히 이해하고, 그에 맞는 연산을 설계하는 것이 중요합니다.""], ""missing_keyword"": ""누적""}","""누적""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""잘못된내용""]","[""누적합을 구하는 대신 수를 빼는 연산을 언급하여 문제의 핵심 요구사항인 '누적합'을 충족하지 못했습니다.""]","[""문제에서 요구하는 연산이 무엇인지 다시 한번 확인해 보세요. '누적합'이라는 단어의 의미를 정확히 이해하고, 그에 맞는 연산을 설계하는 것이 중요합니다.""]",\N,4,1부터 10까지 반복해 수를 뺀 결과를 출력하세요
590,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 11까지 숫자를 출력하세요""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""잘못된범위"", ""누락"", ""잘못된대상""], ""idea_error_detail"": [""반복 범위가 1부터 10까지가 아닌 1부터 11까지로 잘못 설정되었습니다."", ""누적합을 구하는 과정이 누락되었습니다."", ""누적합이 아닌 개별 숫자를 출력하도록 되어 있습니다.""], ""idea_error_advice"": [""반복문의 범위를 문제에서 요구하는 정확한 값으로 설정하는 것이 중요합니다."", ""문제에서 요구하는 '누적합'을 구하기 위한 연산 과정이 아이디어에 포함되어야 합니다."", ""최종적으로 출력해야 하는 대상이 무엇인지 다시 한번 확인해 보세요.""], ""missing_keyword"": ""10, 누적""}","""10, 누적""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""잘못된범위"", ""누락"", ""잘못된대상""]","[""반복 범위가 1부터 10까지가 아닌 1부터 11까지로 잘못 설정되었습니다."", ""누적합을 구하는 과정이 누락되었습니다."", ""누적합이 아닌 개별 숫자를 출력하도록 되어 있습니다.""]","[""반복문의 범위를 문제에서 요구하는 정확한 값으로 설정하는 것이 중요합니다."", ""문제에서 요구하는 '누적합'을 구하기 위한 연산 과정이 아이디어에 포함되어야 합니다."", ""최종적으로 출력해야 하는 대상이 무엇인지 다시 한번 확인해 보세요.""]",\N,\N,1부터 11까지 숫자를 출력하세요
589,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 11까지 숫자를 출력하세요.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""잘못된범위"", ""누락"", ""잘못된대상""], ""idea_error_detail"": [""반복 범위가 1부터 10까지가 아닌 1부터 11까지로 잘못 설정되었습니다."", ""누적합을 구하는 내용이 누락되었습니다."", ""누적합이 아닌 숫자를 출력하도록 잘못된 대상을 지정했습니다.""], ""idea_error_advice"": [""반복문의 범위를 문제에서 요구하는 정확한 값으로 설정했는지 다시 확인해 보세요."", ""문제에서 요구하는 핵심 연산인 '누적합'을 어떻게 구현할지 고민해 보세요."", ""최종적으로 출력해야 하는 값이 무엇인지 다시 한번 확인하고, 그 값을 출력하도록 설계해야 합니다.""], ""missing_keyword"": ""10, 누적""}","""10, 누적""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""잘못된범위"", ""누락"", ""잘못된대상""]","[""반복 범위가 1부터 10까지가 아닌 1부터 11까지로 잘못 설정되었습니다."", ""누적합을 구하는 내용이 누락되었습니다."", ""누적합이 아닌 숫자를 출력하도록 잘못된 대상을 지정했습니다.""]","[""반복문의 범위를 문제에서 요구하는 정확한 값으로 설정했는지 다시 확인해 보세요."", ""문제에서 요구하는 핵심 연산인 '누적합'을 어떻게 구현할지 고민해 보세요."", ""최종적으로 출력해야 하는 값이 무엇인지 다시 한번 확인하고, 그 값을 출력하도록 설계해야 합니다.""]",\N,\N,1부터 11까지 숫자를 출력하세요.
588,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 1부터 11까지 숫자를 출력하세요.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""잘못된범위"", ""누락"", ""잘못된대상""], ""idea_error_detail"": [""반복 범위가 1부터 10까지가 아닌 1부터 11까지로 잘못 설정되었습니다."", ""누적합을 구하는 과정이 누락되었습니다."", ""누적합이 아닌 숫자를 출력하도록 되어 있습니다.""], ""idea_error_advice"": [""반복문의 범위를 문제에서 요구하는 정확한 값으로 설정하는 것이 중요합니다."", ""문제에서 요구하는 핵심 연산(예: 누적합)이 아이디어에 명확히 포함되어야 합니다."", ""출력해야 할 최종 결과물이 무엇인지 다시 한번 확인해 보세요.""], ""missing_keyword"": ""10, 누적""}","""10, 누적""",\N,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""잘못된범위"", ""누락"", ""잘못된대상""]","[""반복 범위가 1부터 10까지가 아닌 1부터 11까지로 잘못 설정되었습니다."", ""누적합을 구하는 과정이 누락되었습니다."", ""누적합이 아닌 숫자를 출력하도록 되어 있습니다.""]","[""반복문의 범위를 문제에서 요구하는 정확한 값으로 설정하는 것이 중요합니다."", ""문제에서 요구하는 핵심 연산(예: 누적합)이 아이디어에 명확히 포함되어야 합니다."", ""출력해야 할 최종 결과물이 무엇인지 다시 한번 확인해 보세요.""]",\N,\N,아이디어: 1부터 11까지 숫자를 출력하세요.
587,0,30013,"
## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 1부터 10까지의 합을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""불명확""], ""idea_error_detail"": [""단순히 '합'이라고만 언급되어 누적합을 구하는 구체적인 연산 과정이 불명확합니다.""], ""idea_error_advice"": [""어떤 방식으로 '합'을 구할 것인지, 그 과정이 명확하게 드러나도록 아이디어를 보완해 보세요.""], ""missing_keyword"": ""누적""}","""누적""",\N,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""불명확""]","[""단순히 '합'이라고만 언급되어 누적합을 구하는 구체적인 연산 과정이 불명확합니다.""]","[""어떤 방식으로 '합'을 구할 것인지, 그 과정이 명확하게 드러나도록 아이디어를 보완해 보세요.""]",\N,\N,아이디어: 1부터 10까지의 합을 출력한다.
586,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 100까지의 합을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""잘못된범위"", ""누락"", ""잘못된범위""], ""idea_error_detail"": [""반복의 범위가 1부터 10까지가 아닌 1부터 100까지로 잘못 설정되었습니다."", ""누적 합산을 수행하는 과정에 대한 언급이 없습니다. 단순히 합을 출력한다고만 되어 있어, 합을 어떻게 구하는지에 대한 설명이 누락되었습니다."", ""문제에서 요구하는 1부터 10까지의 합이 아닌, 1부터 100까지의 합을 출력하도록 되어 있어 출력 범위가 잘못되었습니다.""], ""idea_error_advice"": [""문제에서 요구하는 숫자의 범위를 다시 확인해보세요. 1부터 어디까지 더해야 할까요?"", ""합계를 구하기 위해 숫자를 차례대로 더해가는 과정, 즉 '누적'하는 방법에 대한 설명이 필요해요. 반복하면서 값을 어떻게 더해 나갈지 생각해보세요."", ""최종적으로 출력해야 하는 값이 무엇인지 문제의 요구사항을 다시 한번 확인해보세요. 어떤 범위의 합을 출력해야 할까요?""], ""missing_keyword"": ""누적""}","""누적""","/반복_잘못된범위_반복의 범위가 1부터 10까지가 아닌 1부터 100까지로 잘못 설정되었습니다.//누적_누락_누적 합산을 수행하는 과정에 대한 언급이 없습니다. 단순히 합을 출력한다고만 되어 있어, 합을 어떻게 구하는지에 대한 설명이 누락되었습니다.//출력_잘못된범위_문제에서 요구하는 1부터 10까지의 합이 아닌, 1부터 100까지의 합을 출력하도록 되어 있어 출력 범위가 잘못되었습니다./","[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""잘못된범위"", ""누락"", ""잘못된범위""]","[""반복의 범위가 1부터 10까지가 아닌 1부터 100까지로 잘못 설정되었습니다."", ""누적 합산을 수행하는 과정에 대한 언급이 없습니다. 단순히 합을 출력한다고만 되어 있어, 합을 어떻게 구하는지에 대한 설명이 누락되었습니다."", ""문제에서 요구하는 1부터 10까지의 합이 아닌, 1부터 100까지의 합을 출력하도록 되어 있어 출력 범위가 잘못되었습니다.""]","[""문제에서 요구하는 숫자의 범위를 다시 확인해보세요. 1부터 어디까지 더해야 할까요?"", ""합계를 구하기 위해 숫자를 차례대로 더해가는 과정, 즉 '누적'하는 방법에 대한 설명이 필요해요. 반복하면서 값을 어떻게 더해 나갈지 생각해보세요."", ""최종적으로 출력해야 하는 값이 무엇인지 문제의 요구사항을 다시 한번 확인해보세요. 어떤 범위의 합을 출력해야 할까요?""]",\N,\N,1부터 100까지의 합을 출력한다.
585,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 100까지의 누적합을 출력한다""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""출력""], ""idea_error_reason"": [""잘못된 범위"", ""잘못된 범위""], ""idea_error_detail"": [""반복의 범위가 1부터 10까지여야 하지만, 1부터 100까지로 잘못 설정되었습니다."", ""출력해야 하는 누적합의 범위는 1부터 10까지이지만, 1부터 100까지의 누적합을 출력하도록 작성되었습니다.""], ""idea_error_advice"": [""문제에서 요구하는 숫자의 범위를 다시 한번 확인해보세요. 어디까지 반복하고 합계를 구해야 할까요?"", ""문제에서 요구하는 최종 결과값의 범위를 다시 확인해보세요. 어떤 범위의 누적합을 출력해야 하는지 생각해보세요.""], ""missing_keyword"": """"}","""""","/반복_잘못된 범위_반복의 범위가 1부터 10까지여야 하지만, 1부터 100까지로 잘못 설정되었습니다.//출력_잘못된 범위_출력해야 하는 누적합의 범위는 1부터 10까지이지만, 1부터 100까지의 누적합을 출력하도록 작성되었습니다./","[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""출력""]","[""잘못된 범위"", ""잘못된 범위""]","[""반복의 범위가 1부터 10까지여야 하지만, 1부터 100까지로 잘못 설정되었습니다."", ""출력해야 하는 누적합의 범위는 1부터 10까지이지만, 1부터 100까지의 누적합을 출력하도록 작성되었습니다.""]","[""문제에서 요구하는 숫자의 범위를 다시 한번 확인해보세요. 어디까지 반복하고 합계를 구해야 할까요?"", ""문제에서 요구하는 최종 결과값의 범위를 다시 확인해보세요. 어떤 범위의 누적합을 출력해야 하는지 생각해보세요.""]",\N,\N,1부터 100까지의 누적합을 출력한다
584,1,30013,"

## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 100까지의 누적한 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""",/반복_누락_반복문을 사용해야 한다는 내용이 누락되었습니다./,[],[],[],[],[],\N,\N,1부터 100까지의 누적한 합을 출력한다.
583,0,30013,"

## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지의 합을 구한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""누락""], ""idea_error_detail"": [""단순히 '합을 구한다'고만 되어 있어, 합을 구하는 과정이 누적합의 형태로 이루어진다는 구체적인 설명이 부족합니다."", ""계산된 누적합을 화면에 보여주는 '출력' 과정이 명시적으로 언급되지 않았습니다.""], ""idea_error_advice"": [], ""missing_keyword"": ""출력, 누적""}","""출력, 누적""","/반복_누락_1부터 10까지의 합을 구하는 과정에서 반복적인 연산이 명시적으로 언급되지 않았습니다.//누적_누락_단순히 '합을 구한다'고만 되어 있어, 합을 구하는 과정이 누적합의 형태로 이루어진다는 구체적인 설명이 부족합니다.//출력_누락_계산된 누적합을 화면에 보여주는 '출력' 과정이 명시적으로 언급되지 않았습니다./","[""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""누적"", ""출력""]","[""누락"", ""누락""]","[""단순히 '합을 구한다'고만 되어 있어, 합을 구하는 과정이 누적합의 형태로 이루어진다는 구체적인 설명이 부족합니다."", ""계산된 누적합을 화면에 보여주는 '출력' 과정이 명시적으로 언급되지 않았습니다.""]",[],\N,\N,1부터 10까지의 합을 구한다.
582,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_adivce: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 입력받은 나이에 35를 더하여출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""누락"", ""잘못된내용""], ""idea_error_detail"": [""1부터 10까지 반복하는 과정이 누락되었습니다."", ""숫자를 더하여 누적하는 과정이 누락되었습니다."", ""문제에서 요구하는 '1부터 10까지의 누적합'이 아닌 다른 값을 출력하고 있습니다.""], ""idea_error_advice"": [""문제를 다시 읽고 1부터 10까지의 숫자를 어떻게 처리해야 할지 생각해 보세요. 반복적으로 수행해야 할 작업이 무엇인지 파악하는 것이 중요합니다."", ""단순히 값을 더하는 것이 아니라, 이전까지의 합에 새로운 값을 계속 더해가는 '누적'의 개념을 어떻게 구현할 수 있을지 고민해 보세요."", ""최종적으로 무엇을 출력해야 하는지 문제의 요구사항을 다시 확인해 보세요. 현재 아이디어는 문제와 관련 없는 값을 출력하고 있습니다.""], ""missing_keyword"": ""1, 10, 반복, 누적""}","""1, 10, 반복, 누적""",/반복_누락_1부터 10까지 반복하는 과정이 누락되었습니다.//누적_누락_숫자를 더하여 누적하는 과정이 누락되었습니다.//출력_잘못된내용_문제에서 요구하는 '1부터 10까지의 누적합'이 아닌 다른 값을 출력하고 있습니다./,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""누락"", ""누락"", ""잘못된내용""]","[""1부터 10까지 반복하는 과정이 누락되었습니다."", ""숫자를 더하여 누적하는 과정이 누락되었습니다."", ""문제에서 요구하는 '1부터 10까지의 누적합'이 아닌 다른 값을 출력하고 있습니다.""]","[""문제를 다시 읽고 1부터 10까지의 숫자를 어떻게 처리해야 할지 생각해 보세요. 반복적으로 수행해야 할 작업이 무엇인지 파악하는 것이 중요합니다."", ""단순히 값을 더하는 것이 아니라, 이전까지의 합에 새로운 값을 계속 더해가는 '누적'의 개념을 어떻게 구현할 수 있을지 고민해 보세요."", ""최종적으로 무엇을 출력해야 하는지 문제의 요구사항을 다시 확인해 보세요. 현재 아이디어는 문제와 관련 없는 값을 출력하고 있습니다.""]",\N,\N,아이디어: 입력받은 나이에 35를 더하여출력한다.
581,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_adivce: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 입력받은 나이에 35를 더하여출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""누락"", ""잘못된내용""], ""idea_error_detail"": [""1부터 10까지 반복하는 내용이 없습니다."", ""누적합을 구하는 내용이 없습니다."", ""문제에서 요구하는 누적합이 아닌, 입력받은 나이에 35를 더한 값을 출력하고 있어 문제의 요구사항과 다릅니다.""], ""idea_error_advice"": [""문제를 다시 읽어보고 1부터 10까지의 숫자를 어떻게 처리해야 할지 생각해 보세요. 반복문을 사용하는 것이 도움이 될 수 있습니다."", ""여러 숫자를 계속 더해나가는 '누적'의 개념을 어떻게 코드로 구현할 수 있을지 고민해 보세요. 합계를 저장할 변수가 필요할 수 있습니다."", ""문제에서 최종적으로 무엇을 출력해야 하는지 다시 확인해 보세요. 현재 아이디어는 문제의 요구사항과 다른 값을 출력하고 있습니다.""], ""missing_keyword"": ""1, 10, 반복, 누적""}","""1, 10, 반복, 누적""","/반복_누락_1부터 10까지 반복하는 내용이 없습니다.//누적_누락_누적합을 구하는 내용이 없습니다.//출력_잘못된내용_문제에서 요구하는 누적합이 아닌, 입력받은 나이에 35를 더한 값을 출력하고 있어 문제의 요구사항과 다릅니다./","[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""누락"", ""누락"", ""잘못된내용""]","[""1부터 10까지 반복하는 내용이 없습니다."", ""누적합을 구하는 내용이 없습니다."", ""문제에서 요구하는 누적합이 아닌, 입력받은 나이에 35를 더한 값을 출력하고 있어 문제의 요구사항과 다릅니다.""]","[""문제를 다시 읽어보고 1부터 10까지의 숫자를 어떻게 처리해야 할지 생각해 보세요. 반복문을 사용하는 것이 도움이 될 수 있습니다."", ""여러 숫자를 계속 더해나가는 '누적'의 개념을 어떻게 코드로 구현할 수 있을지 고민해 보세요. 합계를 저장할 변수가 필요할 수 있습니다."", ""문제에서 최종적으로 무엇을 출력해야 하는지 다시 확인해 보세요. 현재 아이디어는 문제의 요구사항과 다른 값을 출력하고 있습니다.""]",\N,\N,아이디어: 입력받은 나이에 35를 더하여출력한다.
580,0,30013,"

## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 더한 합을 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""부족""], ""idea_error_detail"": [""단순히 '더한 합'이라고만 언급되어 누적합을 구하는 구체적인 연산 과정이 불명확합니다.""], ""idea_error_advice"": [""반복적인 계산을 통해 합계를 구하는 과정이 아이디어에 포함되어야 합니다.""], ""missing_keyword"": """"}","""""",/반복_누락_반복문을 사용하여 1부터 10까지 반복하는 과정이 명시되지 않았습니다.//누적_부족_단순히 '더한 합'이라고만 언급되어 누적합을 구하는 구체적인 연산 과정이 불명확합니다./,"[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""부족""]","[""단순히 '더한 합'이라고만 언급되어 누적합을 구하는 구체적인 연산 과정이 불명확합니다.""]","[""반복적인 계산을 통해 합계를 구하는 과정이 아이디어에 포함되어야 합니다.""]",\N,\N,1부터 10까지 더한 합을 출력한다.
579,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 계산할 결과를 출력한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies performing a cumulative addition (sum) operation.""], ""idea_error_object"": [""누적""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""1부터 10까지의 숫자들을 더해나가는 '누적 합'을 구체적으로 어떻게 계산할 것인지에 대한 설명이 없습니다. '계산'이라는 표현은 어떤 계산을 의미하는지 불분명합니다.""], ""idea_error_advice"": [""단순히 '계산'이라고 하기보다는, 이전까지의 계산 결과에 현재 숫자를 계속 더해가는 과정을 어떻게 표현할 수 있을지 고민해보세요.""], ""missing_keyword"": ""누적""}","""누적""","/반복_누락_1부터 10까지의 숫자를 어떻게 처리할지에 대한 반복 과정이 명시되어 있지 않습니다. 단순히 '1부터 10까지'라고만 언급되어 있어, 각 숫자를 순서대로 처리하는 반복의 개념이 빠져있습니다.//누적_누락_1부터 10까지의 숫자들을 더해나가는 '누적 합'을 구체적으로 어떻게 계산할 것인지에 대한 설명이 없습니다. '계산'이라는 표현은 어떤 계산을 의미하는지 불분명합니다./","[""Mentions/implies performing a cumulative addition (sum) operation.""]","[""누적""]","[""누락""]","[""1부터 10까지의 숫자들을 더해나가는 '누적 합'을 구체적으로 어떻게 계산할 것인지에 대한 설명이 없습니다. '계산'이라는 표현은 어떤 계산을 의미하는지 불분명합니다.""]","[""단순히 '계산'이라고 하기보다는, 이전까지의 계산 결과에 현재 숫자를 계속 더해가는 과정을 어떻게 표현할 수 있을지 고민해보세요.""]",\N,\N,1부터 10까지 계산할 결과를 출력한다.
578,1,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적한 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""","/반복_누락_학생의 아이디어에는 '반복'이라는 키워드가 포함되어 있지 않습니다. 문제에서는 반복문을 사용하여 누적합을 구하라고 명시했으므로, 반복 과정에 대한 언급이 필요합니다./",[],[],[],[],[],\N,\N,1부터 10까지 누적한 합을 출력한다.
577,1,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적한 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""","/반복_누락_학생의 아이디어에는 '반복'이라는 키워드가 포함되어 있지 않습니다. 문제에서는 반복문을 사용하여 누적합을 구하라고 명시했으므로, 반복 과정에 대한 언급이 필요합니다./",[],[],[],[],[],\N,\N,1부터 10까지 누적한 합을 출력한다.
576,1,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""1부터 10까지 누적한 합을 출력한다.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""","/반복_누락_문제 해결을 위해 반복문을 사용해야 한다는 조건이 있지만, 아이디어에 반복에 대한 언급이 없습니다./",[],[],[],[],[],\N,\N,1부터 10까지 누적한 합을 출력한다.
572,0,30013,"

## Role
Your Role is an AI grader that checks students' ideas for solving programming problems.
You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

## Evaluation Process
1. **Keyword Matching**: Check if the every required keywords are included
2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
3. **Output Results**: Provide feedback in the specified format

---

## Step 1: Keyword matching
Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
 

### Preprocessing Rules
- Ignore ending particles (-다, -한다, -함, -기, etc.)
- Operator normalization (space after +, -, *, /, %)
- Space/special character normalization

### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
**A. Direct matching**: When the keyword matches exactly
**B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
Examples of synonyms, words with the same meaning, or expressions used in the same context
- Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
- Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
- Repetition: 반복,~부터~까지,for문,while문,루프
- Condition: 조건,만약,if문,분기,판단
- Calculation: 계산,연산,구하기,산출
- Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

**C. Operators**: Operators with the same meaning as keywords
+, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
**D. Excluded expressions**:
Only explicit mentions are allowed, and output must be explicitly mentioned.

Output example
1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
...
Keyword check final result - (cumulative score)

---


## Step 2: Idea solvability
A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
**If all of the following evaluation criteria are not met, the answer is considered incorrect.**
Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
If the number of conditions does not match the number of points, the problem is considered unsolvable.
Output the entire process.
Output example
1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
...
Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

---


## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

Error cause target (10 items) = Target that causes the error

1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

Error cause reason (10 items) = Description of why the target that caused the error became an error

1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
Error Cause Classification Process
1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause target is (error cause target).
2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
Output = The error cause is (error cause target) due to (error cause reason).
3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
Output = (Feedback)


Then, output the error message.
### Error message format
‘Error cause target = (error cause target)’
‘Error cause reason = (error cause reason)’
‘Error cause specific explanation = (specific explanation)’

###Error message example
‘Error cause target = variable cleanup’
‘Error cause reason = omission’
‘Error cause specific explanation = Variable declaration is missing.’

---


## Step 4: Output the final result
Output the information obtained from the keyword check and idea answer criteria check performed so far.
- correct_bool: Answer correctness (True/False)
- non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
- idea_error_object: Error cause target (empty string if correct)
- idea_error_reason: Error cause reason (empty string if correct)
- idea_error_detail: Specific error description (empty string if correct)
- idea_error_advice: broad error description(Feedback) (empty string if correct) 
- missing_keyword: Missing keyword (empty string if correct)

## Evaluation Checklist
1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 1부터 10까지의 수를 모두 더한 수를 계산한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""문제에서는 결과를 출력하라고 명시했지만, 아이디어에는 계산한 값을 출력하는 과정에 대한 언급이 없습니다.""], ""idea_error_advice"": [""계산이 끝난 후, 그 결과를 사용자에게 보여주는 단계가 필요해요. 이 단계를 아이디어에 추가해보세요.""], ""missing_keyword"": ""출력""}","""출력""","/반복_누락_문제에서는 반복문을 사용하라고 명시했지만, 아이디어에는 반복에 대한 언급이 없습니다.//누적_누락_문제에서는 누적합을 구하라고 명시했지만, 아이디어에는 합을 누적하는 과정에 대한 언급이 없습니다. '모두 더한다'는 표현은 최종 결과만을 의미할 수 있어, 과정으로서의 누적 개념이 부족합니다.//출력_누락_문제에서는 결과를 출력하라고 명시했지만, 아이디어에는 계산한 값을 출력하는 과정에 대한 언급이 없습니다./","[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""문제에서는 결과를 출력하라고 명시했지만, 아이디어에는 계산한 값을 출력하는 과정에 대한 언급이 없습니다.""]","[""계산이 끝난 후, 그 결과를 사용자에게 보여주는 단계가 필요해요. 이 단계를 아이디어에 추가해보세요.""]",\N,\N,아이디어: 1부터 10까지의 수를 모두 더한 수를 계산한다.
566,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_advice: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""입력받은 나이에 35를 더한 값을 출력하기""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""반복"", ""누적"", ""출력""], ""idea_error_reason"": [""누락"", ""누락"", ""잘못된내용""], ""idea_error_detail"": [""1부터 10까지 반복하는 내용이 누락되었습니다."", ""누적 합산을 하는 내용이 누락되었습니다."", ""문제에서 요구하는 '1부터 10까지의 누적합'이 아닌 '입력받은 나이에 35를 더한 값'을 출력하도록 설계되어 있습니다.""], ""idea_error_advice"": [""문제를 다시 읽고 1부터 10까지의 숫자를 어떻게 처리해야 할지 생각해 보세요. 반복 구조를 사용해야 할 수 있습니다."", ""단순히 값을 더하는 것이 아니라, 계산된 값을 계속해서 더해 나가는 '누적'의 개념을 어떻게 구현할 수 있을지 고민해 보세요."", ""문제에서 최종적으로 무엇을 출력하라고 요구하는지 다시 확인해 보세요. 현재 아이디어는 문제의 요구사항과 다른 값을 출력하고 있습니다.""], ""missing_keyword"": ""1, 10, 반복, 누적""}","""1, 10, 반복, 누적""",/반복_누락_1부터 10까지 반복하는 내용이 누락되었습니다.//누적_누락_누적 합산을 하는 내용이 누락되었습니다.//출력_잘못된내용_문제에서 요구하는 '1부터 10까지의 누적합'이 아닌 '입력받은 나이에 35를 더한 값'을 출력하도록 설계되어 있습니다./,"[""Mentions/implies repeating/increasing from 1 to 10."", ""Mentions/implies performing a cumulative addition (sum) operation."", ""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""반복"", ""누적"", ""출력""]","[""누락"", ""누락"", ""잘못된내용""]","[""1부터 10까지 반복하는 내용이 누락되었습니다."", ""누적 합산을 하는 내용이 누락되었습니다."", ""문제에서 요구하는 '1부터 10까지의 누적합'이 아닌 '입력받은 나이에 35를 더한 값'을 출력하도록 설계되어 있습니다.""]","[""문제를 다시 읽고 1부터 10까지의 숫자를 어떻게 처리해야 할지 생각해 보세요. 반복 구조를 사용해야 할 수 있습니다."", ""단순히 값을 더하는 것이 아니라, 계산된 값을 계속해서 더해 나가는 '누적'의 개념을 어떻게 구현할 수 있을지 고민해 보세요."", ""문제에서 최종적으로 무엇을 출력하라고 요구하는지 다시 확인해 보세요. 현재 아이디어는 문제의 요구사항과 다른 값을 출력하고 있습니다.""]",\N,\N,입력받은 나이에 35를 더한 값을 출력하기
558,1,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_adivce: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 1부터 10까지의 수를 누적하여 출력한단.""}","{""correct_bool"": true, ""non_passed_standard"": [], ""idea_error_object"": [], ""idea_error_reason"": [], ""idea_error_detail"": [], ""idea_error_advice"": [], ""missing_keyword"": """"}","""""","/반복_누락_문제 해결을 위해 반복문을 사용해야 한다는 조건이 있지만, 아이디어에 반복에 대한 언급이 없습니다./",[],[],[],[],[],\N,\N,아이디어: 1부터 10까지의 수를 누적하여 출력한단.
551,0,30013,"
                ## Role
                Your Role is an AI grader that checks students' ideas for solving programming problems.
                You must answer all in Korean, except when you print out the original answers in ENGLISH that you did not meet.
                Checks whether the student's idea includes all the keywords (or synonyms, words with the same meaning) given for the problem, and if any keywords are missing, outputs the missing keywords.
                Checks whether the student's idea meets all the answer criteria for the problem. If any answer criteria are not met, combines multiple incorrect answer causes and incorrect answer reason classifications to classify the incorrect answer cause and outputs the details.
                Objective: To verify whether the student's idea contains the minimum information required to solve the problem.
                Input format: `{problem_number: (problem number), problem_text_example : (모범 답안: 
 problem content 
 input/output format, example), keywords: (keyword set) }`
                Student answer format: `{problem_number:(problem number),student_idea: (student idea)}`

                ## Evaluation Process
                1. **Keyword Matching**: Check if the every required keywords are included
                2. **Problem Solving Potential of the Idea**: Determine the problem solving potential 
                3. **Output Results**: Provide feedback in the specified format

                ---

                ## Step 1: Keyword matching
                Check whether the keywords given for the problem are included in the student's idea, including synonyms, and find any missing keywords.
                If the given keyword is found, output the part containing the keyword and add 1 point to the keyword accumulation score. If not, output that the keyword is not found.
                

                ### Preprocessing Rules
                - Ignore ending particles (-다, -한다, -함, -기, etc.)
                - Operator normalization (space after +, -, *, /, %)
                - Space/special character normalization

                ### Matching criteria (search for keywords based on the following criteria, and add 1 point when a keyword is found)
                **A. Direct matching**: When the keyword matches exactly
                **B. Semantic synonyms**: Words, vocabulary, or expressions that are synonyms, have the same meaning, or are used in the same context as the keyword, even if they do not match exactly
                Examples of synonyms, words with the same meaning, or expressions used in the same context
                - Input: 입력, 받아, 받은, 입력받기, 읽기, 입력된
                - Output: 출력하기,보여주다,띄우다,반환하다,나타내다.
                - Repetition: 반복,~부터~까지,for문,while문,루프
                - Condition: 조건,만약,if문,분기,판단
                - Calculation: 계산,연산,구하기,산출
                - Accumulation: (Repetition) + (Calculation) Repeatedly calculating and accumulating content, 누적합, 누적

                **C. Operators**: Operators with the same meaning as keywords
                +, -, *, /, %, ==, !=, <, >, <=, >=, &&, ||, !, etc.
                **D. Excluded expressions**:
                Only explicit mentions are allowed, and output must be explicitly mentioned.

                Output example
                1. (Given keyword 1) - (Given keyword, student answer containing synonyms) - O (included or not) - Score: (current keyword cumulative score)
                2. (Given keyword 2) - X (inclusion) - Score: (current keyword cumulative score)
                ...
                Keyword check final result - (cumulative score)

                ---


                ## Step 2: Idea solvability
                A process to check whether the student's idea passes all the minimum answer criteria given in the problem.
                **If all of the following evaluation criteria are not met, the answer is considered incorrect.**
                Check each condition one by one, and if a condition is satisfied, add 1 point to the cumulative score of the idea.
                If the number of conditions does not match the number of points, the problem is considered unsolvable.
                Output the entire process.
                Output example
                1. (Correct answer condition 1 (Original text in English)) - (Reason why condition 1 is satisfied) - O - (Current cumulative score of the idea)
                2. (Correct answer condition 2 (Original text in English)) - (Reason for not satisfying correct answer condition 2) - X - (Current cumulative idea score)
                ...
                Final idea check result - (Cumulative idea score) / (Number of given correct answer conditions)

                1.Mentions/implies repeating/increasing from 1 to 10.
2.Mentions/implies performing a cumulative addition (sum) operation.
3.Mentions/implies outputting the cumulative sum from 1 to 10.

***VERY IMPORTANT: COMMON MISTAKES***
You MUST avoid these mistakes.
1.""1부터 10까지""의 내용은 1부터 10까지 반복할 범위를 나타내는 것이기 때문에 이 뒤에 반복 동안 할 일을 명시하면 1부터 10까지 반복한다는 뜻이야.
*************

Think through step by step.

                ---


                ## Step 3: Error Classification (**If there are evaluation criteria that were not met in Step 2, or if the problem cannot be solved**)
                If there are correct answer conditions that did not pass in Step 2, find the causes of failure in the same order as the reasons for failure in the error causes below, and combine them with the incorrect reasons to identify the causes.

                Error cause target (10 items) = Target that causes the error

                1.변수정리 2. 입력 3. 사칙연산 4.누적 5. 반복 6. 조건 7. 출력 8. 자료형 9.대입 10.나머지 11.배열 12. 기타

                Error cause reason (10 items) = Description of why the target that caused the error became an error

                1.누락 2. 부족 3. 잘못된내용 4. 잘못된순서 5. 잘못된대상 6. 잘못된형식 7. 잘못된범위 8. 충돌 9. 오타 10. 비효율 11. 불명확 12.초기화 13.기타

                0.Output which correct answer condition is failed in ORIGINAL TEXT IN ENGLISH
                Error Cause Classification Process
                1. Classify and output which of the error cause targets is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause target is (error cause target).
                2. Classify and output which content of the error cause target is responsible for the idea failing to meet the correct answer criteria.
                Output = The error cause is (error cause target) due to (error cause reason).
                3. Add a detailed explanation of why the idea did not pass the correct answer criteria.
                Output = The error cause is due to (error cause target) of (error cause reason), and the reason is (detailed explanation).
                4. Feedback is structured to avoid giving the correct answer directly. Instead, it indirectly points out the reason for the mistake and guides the student to identify and correct the issue independently.
                Output = (Feedback)


                Then, output the error message.
                ### Error message format
                ‘Error cause target = (error cause target)’
                ‘Error cause reason = (error cause reason)’
                ‘Error cause specific explanation = (specific explanation)’

                ###Error message example
                ‘Error cause target = variable cleanup’
                ‘Error cause reason = omission’
                ‘Error cause specific explanation = Variable declaration is missing.’

                ---


                ## Step 4: Output the final result
                Output the information obtained from the keyword check and idea answer criteria check performed so far.
                - correct_bool: Answer correctness (True/False)
                - non_passed_standard: Answer criteria not passed (empty string if the answer is correct)
                - idea_error_object: Error cause target (empty string if correct)
                - idea_error_reason: Error cause reason (empty string if correct)
                - idea_error_detail: Specific error description (empty string if correct)
                - idea_error_adivce: broad error description(Feedback) (empty string if correct) 
                - missing_keyword: Missing keyword (empty string if correct)

                ## Evaluation Checklist
                1. Verify semantic matching of keywords 2. Evaluate leniency of idea criteria 3. Accuracy of error classification 4. Accuracy of output format

                ","{""problem_number"": ""30013"", ""problem_text_example"": ""모범 답안:\r\n문제 : 1부터 10까지 수의 누적합을 반복문을 사용하여 구하고,  누적합을 출력하는 내용을 설계 한다. \r\n출력: 55"", ""keywords"": ""키워드: 1,10,반복,누적, 출력""}","{""problem_number"": ""30013"", ""student_idea"": ""아이디어: 1부터 10까지 반복하여 계석 누적하여 그 값을 구한다.""}","{""correct_bool"": false, ""non_passed_standard"": [""Mentions/implies outputting the cumulative sum from 1 to 10.""], ""idea_error_object"": [""출력""], ""idea_error_reason"": [""누락""], ""idea_error_detail"": [""계산된 누적합 결과를 출력하는 과정이 아이디어에 포함되어 있지 않습니다.""], ""idea_error_advice"": [""계산한 결과를 어떻게 보여줄 수 있을지 생각해보세요. 문제에서는 최종 결과를 보여주는 것을 요구하고 있어요.""], ""missing_keyword"": ""출력""}","""출력""",/출력_누락_계산된 누적합 결과를 출력하는 과정이 아이디어에 포함되어 있지 않습니다./,"[""Mentions/implies outputting the cumulative sum from 1 to 10.""]","[""출력""]","[""누락""]","[""계산된 누적합 결과를 출력하는 과정이 아이디어에 포함되어 있지 않습니다.""]","[""계산한 결과를 어떻게 보여줄 수 있을지 생각해보세요. 문제에서는 최종 결과를 보여주는 것을 요구하고 있어요.""]",\N,\N,아이디어: 1부터 10까지 반복하여 계석 누적하여 그 값을 구한다.
